/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/kernel/bundle';
// dependencies.ts
declare namespace ns_0 {
  export class _default extends Map<string, any> {
    update(deps?: [string, any][]): void;
  }
}


// transversal.ts
declare namespace ns_1 {
  import IMCreators = __beyond_dep_ns_0.IMCreators;
  import IExportsDescriptor = __beyond_dep_ns_0.IExportsDescriptor;
  import IBundleSpecs = __beyond_dep_ns_0.IBundleSpecs;
  import Dependencies = ns_0._default;
  interface ITransversalBundleCreator {
    (ims: IMCreators, exports: {
      descriptor?: IExportsDescriptor[];
    }): {
      dependencies: [string];
    };
  }
  type ITransversalBundleSpecs = [IBundleSpecs, ITransversalBundleCreator];
  export class Transversal {
    #private;
    get name(): string;
    get language(): string;
    get bundles(): Map<string, any>;
    get dependencies(): Dependencies;
    constructor(name: string, language?: string);
    initialise(bundles: ITransversalBundleSpecs[]): void;
  }
  export {};
}


export import Transversal = ns_1.Transversal;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };