"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.widgets = exports.hmr = exports.__beyond_pkg = exports.StylesManager = exports.IWidgetSpecs = exports.BeyondWidget = void 0;
var dependency_0 = require("@beyond-js/kernel/bundle");
const {
  Bundle: __Bundle
} = dependency_0;
const __pkg = new __Bundle({
  "module": {
    "vspecifier": "@beyond-js/widgets@0.1.4/render"
  },
  "type": "ts"
}).package();
;
__pkg.dependencies.update([]);
const ims = new Map();

/*************************
INTERNAL MODULE: ./widgets
*************************/

ims.set('./widgets', {
  hash: 874236216,
  creator: function (require, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.widgets = void 0;
    /*bundle*/
    const widgets = new class BeyondWidgets extends Map {
      constructor() {
        super();
      }
      register(specs) {
        specs.forEach(specs => {
          // Widgets can be registered at application start, and later by the widget bundle
          if (this.has(specs.name)) return;
          specs.render = specs.render ? specs.render : {
            csr: true,
            ssr: false,
            sr: false
          };
          const {
            name,
            render
          } = specs;
          render.csr = typeof render.csr === 'boolean' ? render.csr : true;
          this.set(name, specs);
        });
      }
    }();
    exports.widgets = widgets;
  }
});
__pkg.exports.descriptor = [{
  "im": "./widgets",
  "from": "IWidgetSpecs",
  "name": "IWidgetSpecs"
}, {
  "im": "./widgets",
  "from": "StylesManager",
  "name": "StylesManager"
}, {
  "im": "./widgets",
  "from": "BeyondWidget",
  "name": "BeyondWidget"
}, {
  "im": "./widgets",
  "from": "widgets",
  "name": "widgets"
}];
let IWidgetSpecs, StylesManager, BeyondWidget, widgets;

// Module exports
exports.widgets = widgets;
exports.BeyondWidget = BeyondWidget;
exports.StylesManager = StylesManager;
exports.IWidgetSpecs = IWidgetSpecs;
__pkg.exports.process = function ({
  require,
  prop,
  value
}) {
  (require || prop === 'IWidgetSpecs') && (exports.IWidgetSpecs = IWidgetSpecs = require ? require('./widgets').IWidgetSpecs : value);
  (require || prop === 'StylesManager') && (exports.StylesManager = StylesManager = require ? require('./widgets').StylesManager : value);
  (require || prop === 'BeyondWidget') && (exports.BeyondWidget = BeyondWidget = require ? require('./widgets').BeyondWidget : value);
  (require || prop === 'widgets') && (exports.widgets = widgets = require ? require('./widgets').widgets : value);
};
const __beyond_pkg = __pkg;
exports.__beyond_pkg = __beyond_pkg;
const hmr = new function () {
  this.on = (event, listener) => void 0;
  this.off = (event, listener) => void 0;
}();
exports.hmr = hmr;
__pkg.initialise(ims);
//# sourceMappingURL=render.cjs.js.map