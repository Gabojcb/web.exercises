/************
Processor: ts
************/

import * as dependency_0 from '@beyond-js/kernel/bundle';

// FILE: dependencies.d.ts
declare namespace ns_dependencies {
    class _default extends Map<string, any> {
        update(deps?: [
            string,
            any
        ][]): void;
    }
}

// FILE: transversal.d.ts
declare namespace ns_transversal {
    import IMCreators = dependency_0.IMCreators;
    import IExportsDescriptor = dependency_0.IExportsDescriptor;
    import IBundleSpecs = dependency_0.IBundleSpecs;
    import Dependencies = ns_dependencies._default;
    interface ITransversalBundleCreator {
        (ims: IMCreators, exports: {
            descriptor?: IExportsDescriptor[];
        }): {
            dependencies: [
                string
            ];
        };
    }
    type ITransversalBundleSpecs = [
        IBundleSpecs,
        ITransversalBundleCreator
    ];
    class Transversal {
        #private;
        get name(): string;
        get language(): string;
        get bundles(): Map<string, any>;
        get dependencies(): Dependencies;
        constructor(name: string, language?: string);
        initialise(bundles: ITransversalBundleSpecs[]): void;
    }
}

export import Transversal = ns_transversal.Transversal;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };