{"code":"System.register([\"@beyond-js/kernel@0.1.8/bundle\",\"@beyond-js/kernel@0.1.8/core\"], (_exports, _context) => {\n\nconst bimport = specifier => {\n\tconst dependencies = new Map([[\"@beyond-js/kernel\",\"0.1.8\"],[\"@beyond-js/widgets\",\"0.1.3\"]]);\n\treturn globalThis.bimport(globalThis.bimport.resolve(specifier, dependencies));\n};\n\n\nvar dependencies = new Map();\nvar require = dependency => dependencies.get(dependency);\nreturn {\nsetters: [dep => dependencies.set('@beyond-js/kernel@0.1.8/bundle', dep), dep => dependencies.set('@beyond-js/kernel@0.1.8/core', dep)],\nexecute: function() {\n// Prevent esbuild from considering the context to be amd\nconst define = void 0;\nconst module = {};\n\nconst code = (module, require) => {\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// .beyond/uimport/@beyond-js/widgets/render.0.1.3.js\nvar render_0_1_3_exports = {};\n__export(render_0_1_3_exports, {\n  BeyondWidget: () => BeyondWidget,\n  GlobalCSS: () => GlobalCSS,\n  IBeyondWidgetController: () => IBeyondWidgetController,\n  IWidgetSpecs: () => IWidgetSpecs,\n  NodeWidget: () => NodeWidget,\n  StylesManager: () => StylesManager,\n  WidgetCSR: () => WidgetCSR,\n  __beyond_pkg: () => __beyond_pkg,\n  attributes: () => attributes,\n  hmr: () => hmr,\n  prerender: () => prerender,\n  widgets: () => widgets\n});\nmodule.exports = __toCommonJS(render_0_1_3_exports);\n\n// node_modules/@beyond-js/widgets/render/render.browser.mjs\nvar dependency_0 = __toESM(require(\"@beyond-js/kernel@0.1.8/bundle\"), 0);\nvar dependency_1 = __toESM(require(\"@beyond-js/kernel@0.1.8/core\"), 0);\nvar import_meta = {};\nvar {\n  Bundle: __Bundle\n} = dependency_0;\nvar __pkg = new __Bundle({\n  \"module\": {\n    \"vspecifier\": \"@beyond-js/widgets@0.1.3/render\"\n  },\n  \"type\": \"ts\"\n}, _context.meta.url).package();\n;\n__pkg.dependencies.update([[\"@beyond-js/kernel/core\", dependency_1]]);\nvar ims = /* @__PURE__ */new Map();\nims.set(\"./anchor\", {\n  hash: 1014568902,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    typeof process !== \"object\" && customElements.define(\"beyond-link\", class extends HTMLElement {\n      #routing;\n      constructor() {\n        super();\n        bimport(\"@beyond-js/kernel/routing\").then(({\n          routing\n        }) => this.#routing = routing);\n      }\n      connectedCallback() {\n        this.addEventListener(\"click\", () => {\n          if (!this.hasAttribute(\"data-url\")) return;\n          const url = this.getAttribute(\"data-url\");\n          this.#routing?.pushState(url);\n        });\n      }\n    });\n  }\n});\nims.set(\"./attributes\", {\n  hash: 1262494723,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.attributes = exports.Attributes = void 0;\n    var _core = require2(\"@beyond-js/kernel/core\");\n    class Attributes extends _core.Events {\n      #values = /* @__PURE__ */new Map();\n      get values() {\n        return this.#values;\n      }\n      add(name, value) {\n        this.#values.set(name, value);\n        this.trigger(\"add\", name, value);\n        this.trigger(\"change\");\n      }\n      remove(name) {\n        this.#values.delete(name);\n        this.trigger(\"remove\", name);\n        this.trigger(\"change\");\n      }\n    }\n    exports.Attributes = Attributes;\n    const attributes2 = new Attributes();\n    exports.attributes = attributes2;\n  }\n});\nims.set(\"./instances/index\", {\n  hash: 2022060609,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.instances = void 0;\n    var _node = require2(\"./node\");\n    const instances = new class extends Set {\n      register(widget) {\n        this.add(widget);\n        const parent = (() => {\n          let parent2 = widget;\n          while (true) {\n            const root = parent2.getRootNode();\n            if (root === document) return;\n            parent2 = root.host;\n            if (this.has(parent2)) return parent2;\n          }\n        })();\n        const node = new _node.NodeWidget(widget, parent);\n        parent?.wnode.children.add(widget);\n        this.add(widget);\n        return node;\n      }\n    }();\n    exports.instances = instances;\n  }\n});\nims.set(\"./instances/node\", {\n  hash: 3167083658,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.NodeWidget = void 0;\n    class NodeWidget2 {\n      #widget;\n      get widget() {\n        return this.#widget;\n      }\n      #parent;\n      get parent() {\n        return this.#parent;\n      }\n      #children = /* @__PURE__ */new Set();\n      get children() {\n        return this.#children;\n      }\n      constructor(widget, parent) {\n        this.#widget = widget;\n        this.#parent = parent;\n      }\n    }\n    exports.NodeWidget = NodeWidget2;\n  }\n});\nims.set(\"./prerendered/index\", {\n  hash: 483738484,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.prerender = void 0;\n    const prerender2 = new class {\n      #ssr = [];\n      get ssr() {\n        return this.#ssr;\n      }\n      find(element, attrs) {\n        return this.#ssr.find(item => {\n          if (item.element !== element) return false;\n          const iattrs = new Map(item.attributes);\n          return [...attrs].reduce((prev, [name, value]) => prev || iattrs.get(name) === value, true);\n        });\n      }\n    }();\n    exports.prerender = prerender2;\n  }\n});\nims.set(\"./widget/attributes\", {\n  hash: 1029410984,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WidgetGlobalAttributes = void 0;\n    var _attributes = require2(\"../attributes\");\n    class WidgetGlobalAttributes {\n      #holder;\n      get holder() {\n        return this.#holder;\n      }\n      #set = (name, value) => {\n        this.#holder.setAttribute(name, value);\n      };\n      #remove = name => {\n        this.#holder.removeAttribute(name);\n      };\n      initialise(holder) {\n        this.#holder = holder;\n        _attributes.attributes.values.forEach((value, name) => this.#set(name, value));\n        _attributes.attributes.on(\"add\", this.#set);\n        _attributes.attributes.on(\"remove\", this.#remove);\n      }\n      destroy() {\n        _attributes.attributes.off(\"add\", this.#set);\n        _attributes.attributes.off(\"remove\", this.#remove);\n      }\n    }\n    exports.WidgetGlobalAttributes = WidgetGlobalAttributes;\n  }\n});\nims.set(\"./widget/checksum\", {\n  hash: 1702419318,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = _default;\n    function _default(s) {\n      let hash = 0,\n        i,\n        c;\n      const length = s.length;\n      if (length === 0) {\n        return hash;\n      }\n      for (i = 0; i < length; i++) {\n        c = s.charCodeAt(i);\n        hash = (hash << 5) - hash + c;\n        hash = hash & hash;\n      }\n      return hash.toString().replace(\"-\", \"n\");\n    }\n    ;\n  }\n});\nims.set(\"./widget/csr\", {\n  hash: 1023760945,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WidgetCSR = void 0;\n    var _core = require2(\"@beyond-js/kernel/core\");\n    class WidgetCSR2 extends _core.Events {\n      #widget;\n      #bundle;\n      get bundle() {\n        return this.#bundle;\n      }\n      #controller;\n      get controller() {\n        return this.#controller;\n      }\n      #error;\n      get error() {\n        return this.#error;\n      }\n      #loading = false;\n      get loading() {\n        return this.#loading;\n      }\n      #loaded = false;\n      get loaded() {\n        return this.#loaded;\n      }\n      #holders = /* @__PURE__ */new Set([\"initialised\", \"loaded\"]);\n      initialise() {\n        if (!this.#widget.specs.render.csr) return;\n        if (!this.#holders.has(\"initialised\")) throw new Error(\"Widget CSR already initialised\");\n        this.#holders.delete(\"initialised\");\n        this.#render();\n      }\n      constructor(widget) {\n        super();\n        const {\n          specifier,\n          specs\n        } = this.#widget = widget;\n        if (!specs.render.csr) return;\n        bimport(specifier).then(bundle => {\n          this.#bundle = bundle;\n          this.#loading = false;\n          this.#loaded = true;\n          this.#holders.delete(\"loaded\");\n          this.#render();\n        }).catch(exc => {\n          console.error(`Error loading widget \"${specifier}\"`, exc.stack);\n          this.#error = exc.message;\n          this.#loading = false;\n        });\n      }\n      #render = () => {\n        if (this.#holders.size) return;\n        const {\n          Controller\n        } = this.#bundle;\n        if (!Controller || typeof Controller !== \"function\") {\n          const message = `Widget \"${this.#widget.localName}\" does not export its Controller`;\n          console.error(message);\n          this.#error = message;\n          return;\n        }\n        this.#controller = new Controller(this.#widget);\n        this.#controller.initialise().then(() => this.trigger(\"controller.initialised\")).catch(exc => console.log(exc instanceof Error ? exc.stack : exc));\n      };\n      disconnect() {\n        this.#controller?.disconnect?.();\n      }\n      attributeChanged(name, old, value) {\n        this.#controller?.attributeChanged(name, old, value);\n      }\n    }\n    exports.WidgetCSR = WidgetCSR2;\n  }\n});\nims.set(\"./widget/index\", {\n  hash: 2251972216,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.BeyondWidget = void 0;\n    var _instances = require2(\"../instances\");\n    var _sr = require2(\"./sr\");\n    var _csr = require2(\"./csr\");\n    var _ssr = require2(\"./ssr\");\n    var _attributes = require2(\"./attributes\");\n    var _styles = require2(\"./styles\");\n    const Element = typeof HTMLElement === \"undefined\" ? null : HTMLElement;\n    class BeyondWidget2 extends Element {\n      #specs;\n      get specs() {\n        return this.#specs;\n      }\n      get name() {\n        return this.#specs.name;\n      }\n      get vspecifier() {\n        return this.#specs.vspecifier;\n      }\n      #specifier;\n      get specifier() {\n        return this.#specifier;\n      }\n      get host() {\n        return `${location.origin}/`;\n      }\n      get is() {\n        return this.#specs.is;\n      }\n      get route() {\n        return this.#specs.route;\n      }\n      get layout() {\n        return this.#specs.layout;\n      }\n      #holder;\n      get holder() {\n        return this.#holder;\n      }\n      #sr;\n      get sr() {\n        return this.#sr;\n      }\n      #csr;\n      get csr() {\n        return this.#csr;\n      }\n      get controller() {\n        return this.#csr.controller;\n      }\n      #ssr;\n      get ssr() {\n        return this.#ssr;\n      }\n      #attributes;\n      #styles;\n      get styles() {\n        return this.#styles;\n      }\n      #wnode;\n      get wnode() {\n        return this.#wnode;\n      }\n      get wparent() {\n        return this.#wnode.parent;\n      }\n      get wchildren() {\n        return [...this.#wnode.children];\n      }\n      #oncontroller = () => {\n        const event = new CustomEvent(\"controller.initialised\", {\n          bubbles: false,\n          composed: false\n        });\n        this.dispatchEvent(event);\n      };\n      constructor(specs) {\n        super();\n        this.#specs = specs;\n        this.attachShadow({\n          mode: \"open\"\n        });\n        this.#specifier = (() => {\n          const split = specs.vspecifier.split(\"/\");\n          const scope = split[0].startsWith(\"@\") ? split.shift() : void 0;\n          const [name] = split.shift().split(\"@\");\n          const subpath = split.join(\"/\");\n          return (scope ? `${scope}/${name}` : name) + (subpath ? `/${subpath}` : \"\");\n        })();\n        this.#attributes = new _attributes.WidgetGlobalAttributes();\n        this.#sr = new _sr.WidgetSR(this);\n        this.#ssr = new _ssr.WidgetSSR(this);\n        this.#csr = new _csr.WidgetCSR(this);\n        this.#csr?.on(\"controller.initialised\", this.#oncontroller);\n        this.#styles = new _styles.StylesManager(this);\n      }\n      connectedCallback() {\n        this.#wnode = _instances.instances.register(this);\n        this.#holder = document.createElement(\"span\");\n        this.#holder.style.display = \"none\";\n        this.shadowRoot.append(this.#holder);\n        this.#attributes.initialise(this.#holder);\n        this.#ssr.initialise().catch(exc => console.error(exc.stack));\n        this.#sr.initialise().catch(exc => console.error(exc.stack));\n        this.#csr.initialise();\n      }\n      disconnectedCallback() {\n        this.#csr.disconnect();\n      }\n      attributeChangedCallback(name, old, value) {\n        this.#csr.attributeChanged(name, old, value);\n      }\n    }\n    exports.BeyondWidget = BeyondWidget2;\n  }\n});\nims.set(\"./widget/renderer\", {\n  hash: 571206461,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Renderer = void 0;\n    class Renderer {\n      #widget;\n      constructor(widget) {\n        this.#widget = widget;\n      }\n      #ct = 0;\n      async render(sr) {\n        const ct = ++this.#ct;\n        const {\n          name,\n          holder,\n          styles\n        } = this.#widget;\n        if (sr.errors?.length) {\n          console.error(`Error fetching static rendered widget \"${name}\":`, sr.errors);\n          return;\n        }\n        if (holder.children.length) return;\n        if (!sr.html) return \"\";\n        const host = await this.#widget.host;\n        holder.innerHTML = (() => sr.html.replace(/##_!(.*?)!_##/g, () => host))();\n        const links = [];\n        const resources = holder.querySelectorAll(\"link\");\n        resources.forEach(node => links.push(node.href));\n        links.length && (await styles.initialise(links));\n        resources.forEach(node => node.localName === \"link\" && node.addEventListener(\"load\", styles.onloaded));\n        await styles?.ready;\n        if (this.#ct !== ct) return;\n        holder.style.display = \"\";\n      }\n    }\n    exports.Renderer = Renderer;\n  }\n});\nims.set(\"./widget/sr\", {\n  hash: 2731121275,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WidgetSR = void 0;\n    var _checksum = require2(\"./checksum\");\n    var _renderer = require2(\"./renderer\");\n    class WidgetSR {\n      #widget;\n      #renderer;\n      #prerender;\n      get prerender() {\n        return this.#prerender;\n      }\n      constructor(widget) {\n        this.#widget = widget;\n        this.#renderer = new _renderer.Renderer(widget);\n      }\n      #initialised = false;\n      async initialise() {\n        if (this.#initialised) throw new Error(\"Widget SSR already initialised\");\n        this.#initialised = true;\n        const {\n          specs\n        } = this.#widget;\n        if (!specs.render.sr) return;\n        const language = (() => {\n          const {\n            multilanguage\n          } = specs.render;\n          if (!multilanguage) return \"\";\n          let language2 = localStorage.__beyond_language;\n          language2 = language2 ? language2 : navigator.language;\n          language2 = language2.slice(0, 2);\n          return `${language2}:`;\n        })();\n        let resource;\n        if (specs.is === \"page\") {\n          let key = `${language}${specs.name}//${location.pathname}${location.search}`;\n          resource = (0, _checksum.default)(key);\n        } else if (specs.is === \"layout\") {\n          resource = (0, _checksum.default)(`${language}${specs.name}`);\n        } else {\n          const compute = /* @__PURE__ */new Map();\n          specs.attrs?.forEach(attr => {\n            const value = this.#widget.getAttribute(attr);\n            value && compute.set(attr, value);\n          });\n          let key = language;\n          [...compute].sort((a, b) => a[0] < b[0] ? 1 : 0).forEach(([k, v]) => key += `${k}//${v}///`);\n          resource = (0, _checksum.default)(key);\n        }\n        const host = await this.#widget.host;\n        const url = `${host}__sr_widgets__/${specs.name}.${resource}.js`;\n        try {\n          const response = await fetch(url);\n          if (response.status !== 200) {\n            console.error(`Error fetching static rendered widget \"${specs.name}\". Status code: ${response.status}`);\n            return;\n          }\n          const sr = await response.json();\n          this.#prerender = sr;\n          await this.#renderer.render(sr);\n        } catch (exc) {\n          console.error(\"Widget static content fetch error:\", exc.message);\n        }\n      }\n    }\n    exports.WidgetSR = WidgetSR;\n  }\n});\nims.set(\"./widget/ssr\", {\n  hash: 2834037449,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WidgetSSR = void 0;\n    var _prerendered = require2(\"../prerendered\");\n    var _renderer = require2(\"./renderer\");\n    class WidgetSSR {\n      #widget;\n      #renderer;\n      #prerender;\n      get prerender() {\n        return this.#prerender;\n      }\n      constructor(widget) {\n        this.#widget = widget;\n        this.#renderer = new _renderer.Renderer(widget);\n      }\n      #initialised = false;\n      async initialise() {\n        if (!this.#widget.specs.render.ssr) return;\n        if (this.#initialised) throw new Error(\"Widget SSR already initialised\");\n        this.#initialised = true;\n        const widget = this.#widget;\n        const {\n          specs\n        } = widget;\n        const attrs = new Map(specs.attrs ? specs.attrs.map(attr => [attr, widget.getAttribute(attr)]) : void 0);\n        const found = _prerendered.prerender.find(specs.name, attrs);\n        if (!found) {\n          return await this.#load();\n        }\n        this.#prerender = found;\n        await this.#renderer.render(found);\n      }\n      async #load() {\n        const {\n          specifier,\n          name\n        } = this.#widget;\n        const host = await (async () => {\n          const split = specifier.split(\"/\");\n          const pkg = split[0].startsWith(\"@\") ? `${split.shift()}/${split.shift()}` : split.shift();\n          const {\n            ssr: config\n          } = (await bimport(`${pkg}/config`)).default;\n          if (!config || !config.host) {\n            console.error(`Project \"${pkg}\" does not support SSR (host not configured). Required by \"${name}\" widget.`);\n            return;\n          }\n          return config.host;\n        })();\n        if (!host) return;\n        const language = (() => {\n          const {\n            specs\n          } = this.#widget;\n          const {\n            multilanguage\n          } = specs.render;\n          if (!multilanguage) return \"\";\n          let language2 = localStorage.__beyond_language;\n          language2 = language2 ? language2 : navigator.language;\n          language2 = language2.slice(0, 2);\n          return `&language=${language2}`;\n        })();\n        let attrs = (() => {\n          const {\n            specs\n          } = this.#widget;\n          if (!specs.attrs?.length) return \"\";\n          let attrs2 = \"&attrs=\" + specs.attrs.join(\",\");\n          specs.attrs.forEach(attr => {\n            const value = this.#widget.getAttribute(attr);\n            if (!value) return;\n            attrs2 += `&attr.${attr}=${value}`;\n          });\n        })();\n        const url = `${host}/widget?name=${name}${language}${attrs}`;\n        try {\n          const response = await fetch(url);\n          if (response.status !== 200) {\n            console.error(`Error fetching SSR of widget \"${name}\". Status code: ${response.status}`);\n            return;\n          }\n          const sr = await response.json();\n          this.#prerender = sr;\n          await this.#renderer.render(sr);\n        } catch (exc) {\n          console.error(exc.stack);\n        }\n      }\n    }\n    exports.WidgetSSR = WidgetSSR;\n  }\n});\nims.set(\"./widget/styles/global\", {\n  hash: 1566285625,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.GlobalCSS = void 0;\n    var _core = require2(\"@beyond-js/kernel/core\");\n    class GlobalCSS2 extends _core.Events {\n      #widget;\n      #version = 0;\n      constructor(widget) {\n        super();\n        this.#widget = widget;\n        const {\n          host\n        } = this.#widget;\n        const version = this.#version !== 0 ? `?version=${this.#version}` : \"\";\n        this.#link = `${host}global.css${version}`;\n      }\n      #link;\n      get link() {\n        return this.#link;\n      }\n      update() {\n        this.#version++;\n        this.trigger(\"change\");\n      }\n    }\n    exports.GlobalCSS = GlobalCSS2;\n  }\n});\nims.set(\"./widget/styles/index\", {\n  hash: 1538919774,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.StylesManager = void 0;\n    var _core = require2(\"@beyond-js/kernel/core\");\n    var _link = require2(\"./link\");\n    var _global = require2(\"./global\");\n    class StylesManager2 {\n      #events = new _core.Events();\n      on = (event, listener) => this.#events.on(event, listener);\n      off = (event, listener) => this.#events.off(event, listener);\n      #loaded = /* @__PURE__ */new Map();\n      #globalcss;\n      #version = 0;\n      get version() {\n        return this.#version;\n      }\n      #changed() {\n        this.#version++;\n        this.#resolved && this.#events.trigger(\"change\");\n      }\n      get resources() {\n        return /* @__PURE__ */new Set([...this.#loaded.keys()]);\n      }\n      get loaded() {\n        this.#check();\n        return this.#resolved;\n      }\n      #promise;\n      #resolved = false;\n      #resolve;\n      get ready() {\n        this.#check();\n        return this.#promise;\n      }\n      onloaded = event => {\n        const href = typeof event === \"string\" ? event : event.currentTarget.getAttribute(\"href\");\n        if (!this.#loaded.has(href)) {\n          console.warn(`Stylesheet href=\"${href}\" not registered`);\n          return;\n        }\n        this.#loaded.set(href, true);\n        this.#check();\n        const changed = this.#purge();\n        changed && this.#changed();\n        return true;\n      };\n      #check() {\n        if (this.#resolved) return true;\n        const loaded = [...this.#loaded.values()].reduce((prev, loaded2) => prev && loaded2, true);\n        loaded && this.#resolve();\n        return this.#resolved = loaded;\n      }\n      #purge() {\n        const versions = {\n          last: /* @__PURE__ */new Map(),\n          values: /* @__PURE__ */new Map(),\n          lastLoaded: /* @__PURE__ */new Map()\n        };\n        [...this.#loaded.keys()].forEach(href => {\n          const link = new _link.default(href);\n          const prevLast = versions.last.get(link.resource);\n          const last = prevLast && prevLast > link.version ? prevLast : link.version;\n          versions.last.set(link.resource, last);\n          if (this.#loaded.get(link.href)) {\n            const prevLastLoaded = versions.lastLoaded.get(link.resource);\n            const lastLoaded = prevLastLoaded && prevLastLoaded > link.version ? prevLastLoaded : link.version;\n            versions.lastLoaded.set(link.resource, lastLoaded);\n          }\n          const values = versions.values.has(link.resource) ? versions.values.get(link.resource) : /* @__PURE__ */new Set();\n          values.add(link.version);\n          versions.values.set(link.resource, values);\n        });\n        const purge = [];\n        [...this.#loaded.keys()].forEach(href => {\n          const link = new _link.default(href);\n          const lastLoaded = versions.lastLoaded.get(link.resource);\n          link.version < lastLoaded && purge.push(link);\n        });\n        purge.forEach(link => this.#loaded.delete(link.href));\n        return !!purge.length;\n      }\n      #last;\n      #refresh = () => {\n        if (!this.#last) return;\n        const changed = this.#update(this.#last);\n        changed && this.#changed();\n      };\n      #update(_links) {\n        this.#last = _links;\n        _links.unshift(this.#globalcss.link);\n        const links = _links.map(link => new _link.default(link));\n        let changed = false;\n        links.forEach(link => {\n          if (this.#loaded.has(link.href)) return;\n          this.#loaded.set(link.href, false);\n          changed = true;\n        });\n        return changed;\n      }\n      update(links) {\n        const changed = this.#update(links);\n        changed && this.#changed();\n      }\n      constructor(widget) {\n        this.#globalcss = new _global.GlobalCSS(widget);\n        this.#promise = new Promise(resolve => this.#resolve = resolve);\n      }\n      #initialised = false;\n      get initialised() {\n        return this.#initialised;\n      }\n      async initialise(links) {\n        if (this.#initialised) throw new Error(`Widget styles already initialised`);\n        this.#initialised = true;\n        this.#update(links);\n        this.#globalcss.on(\"change\", this.#refresh);\n      }\n      destroy() {\n        this.#globalcss.off(\"change\", this.#refresh);\n      }\n    }\n    exports.StylesManager = StylesManager2;\n  }\n});\nims.set(\"./widget/styles/link\", {\n  hash: 3219871066,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    class _default {\n      #href;\n      get href() {\n        return this.#href;\n      }\n      #resource;\n      get resource() {\n        return this.#resource;\n      }\n      #version;\n      get version() {\n        return this.#version;\n      }\n      constructor(href) {\n        this.#href = href;\n        const iv = href.split(\"?version=\");\n        this.#resource = iv[0];\n        this.#version = iv[1] ? parseInt(iv[1]) : 0;\n      }\n    }\n    exports.default = _default;\n  }\n});\nims.set(\"./widgets\", {\n  hash: 3986250608,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.widgets = void 0;\n    var _widget = require2(\"./widget\");\n    var _instances = require2(\"./instances\");\n    var _attributes = require2(\"./attributes\");\n    require2(\"./anchor\");\n    class BeyondWidgets extends Map {\n      #ssr = true;\n      get ssr() {\n        return this.#ssr;\n      }\n      constructor() {\n        super();\n      }\n      setup(config) {\n        this.#ssr = typeof config?.ssr === \"boolean\" ? config.ssr : true;\n      }\n      get instances() {\n        return _instances.instances;\n      }\n      get attributes() {\n        return _attributes.attributes;\n      }\n      register(specs) {\n        specs.forEach(specs2 => {\n          if (this.has(specs2.name)) return;\n          specs2.render = specs2.render ? specs2.render : {\n            csr: true,\n            ssr: false,\n            sr: false\n          };\n          const {\n            name,\n            render\n          } = specs2;\n          render.csr = typeof render.csr === \"boolean\" ? render.csr : true;\n          this.set(name, specs2);\n          if (typeof process === \"object\") return;\n          customElements.define(name, class extends _widget.BeyondWidget {\n            static get observedAttributes() {\n              return specs2.attrs ? specs2.attrs : [];\n            }\n            constructor() {\n              super(specs2);\n            }\n          });\n        });\n      }\n    }\n    const widgets2 = new BeyondWidgets();\n    exports.widgets = widgets2;\n  }\n});\n__pkg.exports.descriptor = [{\n  \"im\": \"./attributes\",\n  \"from\": \"attributes\",\n  \"name\": \"attributes\"\n}, {\n  \"im\": \"./instances/node\",\n  \"from\": \"NodeWidget\",\n  \"name\": \"NodeWidget\"\n}, {\n  \"im\": \"./prerendered/index\",\n  \"from\": \"prerender\",\n  \"name\": \"prerender\"\n}, {\n  \"im\": \"./widget/csr\",\n  \"from\": \"IBeyondWidgetController\",\n  \"name\": \"IBeyondWidgetController\"\n}, {\n  \"im\": \"./widget/csr\",\n  \"from\": \"WidgetCSR\",\n  \"name\": \"WidgetCSR\"\n}, {\n  \"im\": \"./widget/index\",\n  \"from\": \"IWidgetSpecs\",\n  \"name\": \"IWidgetSpecs\"\n}, {\n  \"im\": \"./widget/index\",\n  \"from\": \"BeyondWidget\",\n  \"name\": \"BeyondWidget\"\n}, {\n  \"im\": \"./widget/styles/global\",\n  \"from\": \"GlobalCSS\",\n  \"name\": \"GlobalCSS\"\n}, {\n  \"im\": \"./widget/styles/index\",\n  \"from\": \"StylesManager\",\n  \"name\": \"StylesManager\"\n}, {\n  \"im\": \"./widgets\",\n  \"from\": \"widgets\",\n  \"name\": \"widgets\"\n}];\nvar attributes, NodeWidget, prerender, IBeyondWidgetController, WidgetCSR, IWidgetSpecs, BeyondWidget, GlobalCSS, StylesManager, widgets;\n__pkg.exports.process = function ({\n  require: require2,\n  prop,\n  value\n}) {\n  (require2 || prop === \"attributes\") && (attributes = require2 ? require2(\"./attributes\").attributes : value);\n  (require2 || prop === \"NodeWidget\") && (NodeWidget = require2 ? require2(\"./instances/node\").NodeWidget : value);\n  (require2 || prop === \"prerender\") && (prerender = require2 ? require2(\"./prerendered/index\").prerender : value);\n  (require2 || prop === \"IBeyondWidgetController\") && (IBeyondWidgetController = require2 ? require2(\"./widget/csr\").IBeyondWidgetController : value);\n  (require2 || prop === \"WidgetCSR\") && (WidgetCSR = require2 ? require2(\"./widget/csr\").WidgetCSR : value);\n  (require2 || prop === \"IWidgetSpecs\") && (IWidgetSpecs = require2 ? require2(\"./widget/index\").IWidgetSpecs : value);\n  (require2 || prop === \"BeyondWidget\") && (BeyondWidget = require2 ? require2(\"./widget/index\").BeyondWidget : value);\n  (require2 || prop === \"GlobalCSS\") && (GlobalCSS = require2 ? require2(\"./widget/styles/global\").GlobalCSS : value);\n  (require2 || prop === \"StylesManager\") && (StylesManager = require2 ? require2(\"./widget/styles/index\").StylesManager : value);\n  (require2 || prop === \"widgets\") && (widgets = require2 ? require2(\"./widgets\").widgets : value);\n};\nvar __beyond_pkg = __pkg;\nvar hmr = new function () {\n  this.on = (event, listener) => void 0;\n  this.off = (event, listener) => void 0;\n}();\n__pkg.initialise(ims);\n};\n\ncode(module, require);\n_exports(module.exports);\n}}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","dependencies":[{"id":"@beyond-js/kernel@0.1.8/bundle","path":"C:\\Users\\Gabigol\\Documents\\prueba-beyond\\beyond\\node_modules\\@beyond-js\\kernel"},{"id":"@beyond-js/kernel@0.1.8/core","path":"C:\\Users\\Gabigol\\Documents\\prueba-beyond\\beyond\\node_modules\\@beyond-js\\kernel"}],"warnings":[]}