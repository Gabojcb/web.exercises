{"code":"System.register([], (_exports, _context) => {\n\nconst bimport = specifier => {\n\tconst dependencies = new Map([[\"@beyond-js/kernel\",\"0.1.8\"]]);\n\treturn globalThis.bimport(globalThis.bimport.resolve(specifier, dependencies));\n};\n\n\nvar dependencies = new Map();\nvar require = dependency => dependencies.get(dependency);\nreturn {\nsetters: [],\nexecute: function() {\n// Prevent esbuild from considering the context to be amd\nconst define = void 0;\nconst module = {};\n\nconst code = (module, require) => {\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// .beyond/uimport/@beyond-js/kernel/bundle.0.1.8.js\nvar bundle_0_1_8_exports = {};\n__export(bundle_0_1_8_exports, {\n  Bundle: () => Bundle,\n  Events: () => Events,\n  IBundleSpecs: () => IBundleSpecs,\n  IExportsDescriptor: () => IExportsDescriptor,\n  IMCreators: () => IMCreators,\n  IMSpecs: () => IMSpecs,\n  ListenerFunction: () => ListenerFunction,\n  Module: () => Module,\n  Package: () => Package,\n  bimport: () => bimport,\n  brequire: () => brequire,\n  instances: () => instances\n});\nmodule.exports = __toCommonJS(bundle_0_1_8_exports);\n\n// node_modules/@beyond-js/kernel/bundle/bundle.browser.mjs\nvar __pkg = {\n  exports: {}\n};\nvar ims = /* @__PURE__ */new Map();\nims.set(\"./base/index\", {\n  hash: 1936310117,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.BeyondPackage = void 0;\n    exports.resolve = resolve;\n    function resolve(source, id) {\n      if (!id.startsWith(\".\")) throw new Error(`Module id must be a relative resource \"${id}\"`);\n      const split = {};\n      split.source = source.split(\"/\");\n      split.source.pop();\n      split.target = (id.startsWith(\"./\") ? id.slice(2) : id).split(\"../\");\n      while (split.target[0] === \"\" && split.target.length > 1) {\n        split.target.shift();\n        split.source.pop();\n      }\n      return split.source.join(\"/\") + \"/\" + split.target.join(\"/\");\n    }\n    class BeyondPackage {\n      #ims;\n      #cached = /* @__PURE__ */new Map();\n      #exports;\n      constructor(exports2) {\n        this.#exports = exports2;\n      }\n      initialise(ims2) {\n        this.#ims = ims2;\n        this.#exports.process((id, source) => this.require(id, source), {});\n      }\n      require(id, source) {\n        id = source ? resolve(source, id) : id;\n        const module2 = (() => {\n          if (this.#ims.has(id)) return id;\n          return id.endsWith(\"/\") ? `${id}index` : `${id}/index`;\n        })();\n        if (this.#cached.has(module2)) return this.#cached.get(module2);\n        if (!this.#ims.has(module2)) throw new Error(`Internal module \"${id}\" not found`);\n        const fn = this.#ims.get(module2).creator;\n        const require3 = required => this.require(required, module2);\n        const exports2 = {};\n        fn(require3, exports2);\n        this.#cached.set(module2, exports2);\n        return exports2;\n      }\n    }\n    exports.BeyondPackage = BeyondPackage;\n  }\n});\nims.set(\"./bimport/bimport\", {\n  hash: 1563705995,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.bimport = bimport2;\n    require2(\"./brequire\");\n    function bimport2(resource, version) {\n      if (bimport2.mode === \"amd\") {\n        return new Promise((resolve, reject) => {\n          if (typeof resource !== \"string\") throw \"Invalid module parameter\";\n          resource = resource.endsWith(\".js\") ? resource.slice(0, resource.length - 3) : resource;\n          const error = new Error(`Error loading or processing module \"${resource}\"`);\n          amd_require([resource], returned => resolve(returned), exc => {\n            console.error(`Error loading resource \"${resource}\".`);\n            console.log(exc.stack);\n            reject(error);\n          });\n        });\n      } else if (bimport2.mode === \"sjs\") {\n        return globalThis.System.import(resource + (version ? `?version=${version}` : \"\"));\n      } else {\n        return import(resource + (version ? `?version=${version}` : \"\"));\n      }\n    }\n    bimport2.mode = (() => {\n      if (typeof amd_require === \"function\") return \"amd\";\n      const {\n        System\n      } = globalThis;\n      if (typeof System === \"object\" && typeof System.import === \"function\") return \"sjs\";\n      return \"esm\";\n    })();\n    const appDependencies = (() => {\n      const dependencies = globalThis.__app_package?.dependencies;\n      return new Map(dependencies);\n    })();\n    bimport2.resolve = (specifier, dependencies) => {\n      if (/^https?:\\/\\//.test(specifier)) return specifier;\n      const split = specifier.split(\"/\");\n      const pkg = split[0].startsWith(\"@\") ? `${split.shift()}/${split.shift()}` : split.shift();\n      const version = (() => {\n        if (dependencies.has(pkg)) return dependencies.get(pkg);\n        if (appDependencies.has(pkg)) return appDependencies.get(pkg);\n      })();\n      if (!version) return specifier;\n      const subpath = split.join(\"/\");\n      return `${pkg}@${version}` + (subpath ? `/${subpath}` : \"\");\n    };\n  }\n});\nims.set(\"./bimport/brequire\", {\n  hash: 596501557,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.brequire = brequire2;\n    var _instances = require2(\"../package/instances\");\n    function brequire2(specifier) {\n      const split = specifier.split(\"/\");\n      const pkg = split[0].startsWith(\"@\") ? `${split.shift()}/${split.shift()}` : split.shift();\n      const subpath = split.join(\"/\");\n      const found = [..._instances.default].find(([vspecifier]) => {\n        if (!vspecifier.startsWith(`${pkg}@`)) return;\n        const split2 = vspecifier.slice(pkg.length).split(\"/\");\n        split2.shift();\n        return subpath === split2.join(\"/\");\n      });\n      if (!found) return;\n      !found[1].initialised && found[1].initialise();\n      return found[1].exports.values;\n    }\n  }\n});\nims.set(\"./bimport/index\", {\n  hash: 478135557,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    var _bimport = require2(\"./bimport\");\n    var _brequire = require2(\"./brequire\");\n    globalThis.bimport === void 0 && (globalThis.bimport = _bimport.bimport);\n    globalThis.brequire === void 0 && (globalThis.brequire = _brequire.brequire);\n  }\n});\nims.set(\"./bimport/requirejs\", {\n  hash: 2243979856,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./bundle\", {\n  hash: 2786310194,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Bundle = void 0;\n    var _package = require2(\"./package\");\n    var _instances = require2(\"./instances\");\n    var _module = require2(\"./module\");\n    require2(\"./bimport\");\n    class Bundle2 extends Map {\n      #type;\n      get type() {\n        return this.#type;\n      }\n      #name;\n      get name() {\n        return this.#name;\n      }\n      #vspecifier;\n      get vspecifier() {\n        return this.#vspecifier;\n      }\n      #specifier;\n      get specifier() {\n        return this.#specifier;\n      }\n      #module;\n      get module() {\n        return this.#module;\n      }\n      #uri;\n      get uri() {\n        return this.#uri;\n      }\n      constructor(specs, uri) {\n        super();\n        if (typeof specs !== \"object\") throw new Error(\"Bundle creation specification is not defined\");\n        const name = this.#name = specs.name ? specs.name : specs.type;\n        if (!name) throw new Error(\"Invalid bundle creation specification\");\n        this.#module = new _module.Module(specs.module);\n        this.#uri = uri;\n        this.#type = specs.type;\n        const {\n          multibundle,\n          vspecifier,\n          specifier\n        } = this.#module;\n        this.#vspecifier = multibundle ? `${vspecifier}.${name}` : vspecifier;\n        this.#specifier = multibundle ? `${specifier}.${name}` : specifier;\n        _instances.instances.register(this);\n      }\n      package(language) {\n        if (language && language.length !== 2) throw new Error(`Language \"${language}\" is invalid`);\n        language = !language ? \"\" : language;\n        if (this.has(language)) return this.get(language);\n        const pkg = new _package.Package(this, language);\n        this.set(language, pkg);\n        return pkg;\n      }\n    }\n    exports.Bundle = Bundle2;\n  }\n});\nims.set(\"./events/index\", {\n  hash: 1779469688,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Events = void 0;\n    class Events2 {\n      #specs;\n      #listeners = /* @__PURE__ */new Map();\n      #destroyed = false;\n      get destroyed() {\n        return this.#destroyed;\n      }\n      constructor(specs) {\n        specs = specs ? specs : {};\n        if (specs.supported && !(specs.supported instanceof Array)) throw new Error(\"Invalid parameters\");\n        this.#specs = specs;\n        if (specs.bind) {\n          specs.bind.bind = (event, listener, priority) => this.on(event, listener, priority);\n          specs.bind.unbind = (event, listener) => this.off(event, listener);\n        }\n      }\n      on(event, listener, priority) {\n        if (this.#destroyed) {\n          throw new Error(\"Events object is destroyed\");\n        }\n        if (this.#specs.supported && !this.#specs.supported.includes(event)) {\n          throw new Error(`Event \"${event}\" is not defined`);\n        }\n        if (typeof listener !== \"function\") {\n          throw new Error(\"Listener is not a function\");\n        }\n        this.off(event, listener);\n        const l = this.#listeners.has(event) ? this.#listeners.get(event) : [];\n        this.#listeners.set(event, l);\n        l.push({\n          listener,\n          priority: priority ? priority : 0\n        });\n        return this;\n      }\n      bind = (event, listener, priority) => this.on(event, listener, priority);\n      off(event, listener, force) {\n        if (this.#destroyed) {\n          throw new Error(\"Events object is destroyed\");\n        }\n        if (!event) {\n          throw new Error(`Event name not specified`);\n        }\n        if (this.#specs.supported && !this.#specs.supported.includes(event)) {\n          throw new Error(`Event \"${event}\" is not defined`);\n        }\n        if (!listener) {\n          if (!force) throw new Error(\"Listener function not set\");\n          this.#listeners.delete(event);\n          return this;\n        }\n        if (!this.#listeners.has(event)) {\n          return this;\n        }\n        const e = this.#listeners.get(event);\n        const filtered = e.filter(item => item.listener !== listener);\n        this.#listeners.set(event, filtered);\n        return this;\n      }\n      unbind = (event, listener, force) => this.off(event, listener, force);\n      trigger(event, ...rest) {\n        if (this.#destroyed) {\n          throw new Error(\"Events object is destroyed\");\n        }\n        event = typeof event === \"string\" ? {\n          \"name\": event\n        } : event;\n        if (typeof event !== \"object\") throw new Error(\"Invalid parameters\");\n        if (typeof event.name !== \"string\") throw new Error(\"Invalid event name\");\n        if (this.#specs.supported && !this.#specs.supported.includes(event.name)) {\n          throw new Error(`Event \"${event.name}\" is not defined`);\n        }\n        let args = [...arguments];\n        args.shift();\n        if (!this.#listeners.has(event.name)) return;\n        let l = this.#listeners.get(event.name);\n        l.sort((a, b) => b.priority - a.priority);\n        if (event.async) {\n          const trigger = async function () {\n            const promises = [];\n            for (let listener of l) {\n              promises.push(listener.listener(...args));\n            }\n            await Promise.all(promises);\n          };\n          return trigger.call(this, ...args).catch(exc => console.error(exc.stack));\n        } else {\n          for (let listener of l) {\n            listener.listener(...args);\n          }\n        }\n      }\n      destroy() {\n        this.#destroyed = true;\n        this.#listeners.clear();\n      }\n    }\n    exports.Events = Events2;\n  }\n});\nims.set(\"./events/types\", {\n  hash: 1632705009,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./instances\", {\n  hash: 1214802090,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.instances = void 0;\n    const instances2 = new class extends Map {\n      register(bundle) {\n        this.set(bundle.vspecifier, bundle);\n      }\n    }();\n    exports.instances = instances2;\n  }\n});\nims.set(\"./module/index\", {\n  hash: 702878917,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Module = void 0;\n    class Module2 {\n      #pkg;\n      get pkg() {\n        return this.#pkg;\n      }\n      #vspecifier;\n      get vspecifier() {\n        return this.#vspecifier;\n      }\n      #specifier;\n      get specifier() {\n        return this.#specifier;\n      }\n      #version;\n      get version() {\n        return this.#version;\n      }\n      #subpath;\n      get subpath() {\n        return this.#subpath;\n      }\n      #multibundle;\n      get multibundle() {\n        return this.#multibundle;\n      }\n      constructor(specs) {\n        this.#vspecifier = specs.vspecifier;\n        this.#multibundle = specs.multibundle;\n        const split = specs.vspecifier.split(\"/\");\n        const scope = split[0].startsWith(\"@\") ? split.shift() : void 0;\n        const [name, version] = split.shift().split(\"@\");\n        this.#subpath = split.join(\"/\");\n        this.#pkg = scope ? `${scope}/${name}` : name;\n        this.#version = version;\n        this.#specifier = this.#pkg + (this.#subpath ? `/${this.#subpath}` : \"\");\n      }\n      async execute(action, params) {\n        if (typeof globalThis.beyond !== \"object\") return;\n        const {\n          backends\n        } = await beyond.import(\"@beyond-js/backend/client\");\n        return await backends.execute(this.#pkg, \"legacy\", this.#subpath, action, params);\n      }\n    }\n    exports.Module = Module2;\n  }\n});\nims.set(\"./package/dependencies\", {\n  hash: 3724344928,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    class _default extends Map {\n      #pkg;\n      constructor(pkg) {\n        super();\n        this.#pkg = pkg;\n      }\n      update(deps) {\n        this.clear();\n        deps?.forEach(([specifier, dependency]) => {\n          if (!dependency) {\n            throw new Error(`Dependency \"${specifier}\" not found on package \"${this.#pkg.vspecifier}\"`);\n          }\n          const {\n            __beyond_transversal: transversal\n          } = dependency;\n          dependency = transversal ? transversal.bundles.get(specifier) : dependency;\n          this.set(specifier, dependency);\n        });\n      }\n    }\n    exports.default = _default;\n  }\n});\nims.set(\"./package/exports\", {\n  hash: 3682924180,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _trace = require2(\"./ims/require/trace\");\n    class _default {\n      #require;\n      #values = {};\n      get values() {\n        return this.#values;\n      }\n      descriptor;\n      process;\n      constructor(require3) {\n        this.#require = require3;\n        this.#values.hmr = {\n          on: (event, listener) => require3.pkg.hmr.on(event, listener),\n          off: (event, listener) => require3.pkg.hmr.off(event, listener)\n        };\n        this.#values.__beyond_pkg = this.#require.pkg;\n      }\n      set(key, value) {\n        this.#values[key] = value;\n      }\n      update() {\n        const require3 = id => {\n          const trace = new _trace.Trace();\n          trace.register(\"exports.update\", id);\n          return this.#require.solve(id, trace);\n        };\n        this.process?.({\n          require: require3\n        });\n        const reserved = [\"__beyond_pkg\", \"hmr\"];\n        Object.keys(this.#values).forEach(p => !reserved.includes(p) && delete this.#values[p]);\n        this.descriptor?.forEach(({\n          im,\n          from,\n          name\n        }) => {\n          const trace = new _trace.Trace();\n          this.#values[name] = this.#require.solve(im, trace)[from];\n        });\n      }\n    }\n    exports.default = _default;\n  }\n});\nims.set(\"./package/ims/exports\", {\n  hash: 3697874831,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.IMExports = void 0;\n    class IMExports {\n      constructor(im, bexports) {\n        return new Proxy(this, {\n          set: (self, name, value) => {\n            self[name] = value;\n            const prop = bexports.descriptor?.find(({\n              im: id,\n              from\n            }) => {\n              return im.id === id && name === from;\n            });\n            prop && bexports.set(prop.name, value);\n            prop && bexports.process?.({\n              prop: prop.name,\n              value\n            });\n            return true;\n          }\n        });\n      }\n    }\n    exports.IMExports = IMExports;\n  }\n});\nims.set(\"./package/ims/im\", {\n  hash: 2241059934,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.InternalModule = void 0;\n    var _trace = require2(\"./require/trace\");\n    var _exports = require2(\"./exports\");\n    class InternalModule {\n      #pkg;\n      get package() {\n        return this.#pkg;\n      }\n      #id;\n      get id() {\n        return this.#id;\n      }\n      #hash;\n      get hash() {\n        return this.#hash;\n      }\n      #require;\n      #exports;\n      #creator;\n      #creating = false;\n      #created = false;\n      get created() {\n        return this.#created;\n      }\n      #create = trace => {\n        if (this.#created) throw new Error(`Internal module \"${this.#id}\" already created`);\n        if (this.#creating) throw new Error(`Cyclical import found on internal module \"${this.#id}\"`);\n        this.#creating = true;\n        const require3 = id => this.#require.solve(id, trace, this);\n        Object.keys(this.#exports).forEach(key => delete this.#exports[key]);\n        this.#creator(require3, this.#exports);\n        this.#created = true;\n        this.#creating = false;\n      };\n      require(trace, source) {\n        if (!this.#created) {\n          source && trace.register(source.id, this.#id);\n          this.#create(trace);\n          trace.pop();\n        }\n        return this.#exports;\n      }\n      initialise() {\n        if (this.#created) return;\n        const trace = new _trace.Trace();\n        trace.register(\"initialisation\", this.#id);\n        this.#create(trace);\n      }\n      update(creator, hash) {\n        this.#created = false;\n        this.#creator = creator;\n        this.#hash = hash;\n      }\n      constructor(pkg, id, hash, creator, require3) {\n        this.#pkg = pkg;\n        this.#id = id;\n        this.#hash = hash;\n        this.#creator = creator;\n        this.#require = require3;\n        this.#exports = new _exports.IMExports(this, pkg.exports);\n      }\n    }\n    exports.InternalModule = InternalModule;\n  }\n});\nims.set(\"./package/ims/index\", {\n  hash: 993201032,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.InternalModules = void 0;\n    var _im = require2(\"./im\");\n    class InternalModules {\n      #pkg;\n      #ims = /* @__PURE__ */new Map();\n      #require;\n      constructor(pkg) {\n        this.#pkg = pkg;\n      }\n      set _require(value) {\n        this.#require = value;\n      }\n      #register = (id, hash, creator) => {\n        if (this.#ims.has(id)) throw new Error(`IM \"${id}\" already registered`);\n        const im = new _im.InternalModule(this.#pkg, id, hash, creator, this.#require);\n        this.#ims.set(im.id, im);\n      };\n      register(ims2) {\n        ims2.forEach(({\n          creator,\n          hash\n        }, id) => this.#register(id, hash, creator));\n      }\n      require(id, trace, source) {\n        const module2 = (() => {\n          if (this.#ims.has(id)) return id;\n          return id.endsWith(\"/\") ? `${id}index` : `${id}/index`;\n        })();\n        if (!this.#ims.has(module2)) {\n          throw new Error(`Internal module \"${id}\" not found`);\n        }\n        const im = this.#ims.get(module2);\n        return im.require(trace, source);\n      }\n      initialise() {\n        this.#ims.forEach(im => im.initialise());\n      }\n      update(ims2) {\n        ims2.forEach(({\n          creator,\n          hash\n        }, id) => {\n          if (!this.#ims.has(id)) {\n            this.#register(id, hash, creator);\n            return;\n          }\n          const im = this.#ims.get(id);\n          if (im.hash === hash) return;\n          im.update(creator, hash);\n          this.#pkg.hmr.trigger(`${id}:change`);\n        });\n      }\n    }\n    exports.InternalModules = InternalModules;\n  }\n});\nims.set(\"./package/ims/require/index\", {\n  hash: 12273943,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Require = void 0;\n    var _base = require2(\"../../../base\");\n    class Require {\n      #pkg;\n      get pkg() {\n        return this.#pkg;\n      }\n      constructor(pkg) {\n        this.#pkg = pkg;\n      }\n      solve(specifier, trace, im) {\n        if (specifier.startsWith(\".\")) {\n          specifier = im ? (0, _base.resolve)(im.id, specifier) : specifier;\n          return this.#pkg.ims.require(specifier, trace, im);\n        }\n        if (specifier === \"beyond_context\") {\n          const {\n            bundle\n          } = this.#pkg;\n          return {\n            module: bundle.module,\n            bundle,\n            pkg: this.#pkg\n          };\n        }\n        if (specifier === \"@beyond-js/kernel/bundle\") {\n          const {\n            Bundle: Bundle2\n          } = require2(\"../../../bundle\");\n          const {\n            instances: instances2\n          } = require2(\"../../../instances\");\n          return {\n            Bundle: Bundle2,\n            instances: instances2\n          };\n        }\n        const {\n          dependencies\n        } = this.#pkg;\n        if (dependencies.has(specifier)) {\n          const {\n            __beyond_pkg: pkg\n          } = dependencies.get(specifier);\n          typeof pkg === \"object\" && !pkg.initialised && pkg.initialise();\n          return dependencies.get(specifier);\n        }\n        const keys = JSON.stringify([...dependencies.keys()]);\n        throw new Error(`Bundle \"${specifier}\" is not registered as a dependency: ${keys}`);\n      }\n    }\n    exports.Require = Require;\n  }\n});\nims.set(\"./package/ims/require/trace\", {\n  hash: 1932027471,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Trace = void 0;\n    class Trace extends Array {\n      has = id => this.find(rt => rt.id === id);\n      register(source, id) {\n        if (this.has(id)) {\n          let traced = \"\";\n          this.forEach(({\n            id: id2,\n            source: source2\n          }) => {\n            const s = [\"initialisation\", \"exports.update\"].includes(source2) ? \"Cycle initiates with source\" : `then \"${source2}\" requires`;\n            traced += `\t${s} \"${id2}\"\n`;\n          });\n          traced += `\tthat finally requires \"${id}\" again.\n`;\n          throw new Error(`Recursive module load found.\nInternal module \"${source}\" is requiring another internal module that was previously required: \"${id}\"\nTrace of required modules:\n${traced}`);\n        }\n        this.push({\n          id,\n          source\n        });\n      }\n    }\n    exports.Trace = Trace;\n  }\n});\nims.set(\"./package/index\", {\n  hash: 458850112,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Package = void 0;\n    var _ims = require2(\"./ims\");\n    var _require = require2(\"./ims/require\");\n    var _exports = require2(\"./exports\");\n    var _dependencies = require2(\"./dependencies\");\n    var _instances = require2(\"./instances\");\n    var _events = require2(\"../events\");\n    class Package2 {\n      #bundle;\n      get bundle() {\n        return this.#bundle;\n      }\n      #language;\n      get language() {\n        return this.#language;\n      }\n      #vspecifier;\n      get vspecifier() {\n        return this.#vspecifier;\n      }\n      #specifier;\n      get specifier() {\n        return this.#specifier;\n      }\n      #require;\n      #ims;\n      get ims() {\n        return this.#ims;\n      }\n      #exports;\n      get exports() {\n        return this.#exports;\n      }\n      #dependencies = new _dependencies.default(this);\n      get dependencies() {\n        return this.#dependencies;\n      }\n      #hmr = new _events.Events();\n      get hmr() {\n        return this.#hmr;\n      }\n      constructor(bundle, language) {\n        this.#bundle = bundle;\n        this.#language = language ? language : \"\";\n        this.#vspecifier = language ? `${bundle.vspecifier}.${language}` : bundle.vspecifier;\n        this.#specifier = language ? `${bundle.specifier}.${language}` : bundle.specifier;\n        this.#ims = new _ims.InternalModules(this);\n        this.#require = new _require.Require(this);\n        this.#ims._require = this.#require;\n        this.#exports = new _exports.default(this.#require);\n        _instances.default.register(this);\n      }\n      #initialised = false;\n      get initialised() {\n        return this.#initialised;\n      }\n      initialise(ims2) {\n        if (this.#initialised) throw new Error(\"Package already initialised\");\n        this.#initialised = true;\n        ims2 && this.#ims.register(ims2);\n        this.exports.update();\n        this.#ims.initialise();\n      }\n      update(ims2) {\n        this.#ims.update(ims2);\n        this.exports.update();\n        this.#ims.initialise();\n        this.#hmr.trigger(\"change\");\n      }\n    }\n    exports.Package = Package2;\n  }\n});\nims.set(\"./package/instances\", {\n  hash: 2745122839,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _default = new class extends Map {\n      register(pkg) {\n        this.set(pkg.vspecifier, pkg);\n      }\n    }();\n    exports.default = _default;\n  }\n});\n__pkg.exports.descriptor = [{\n  \"im\": \"./bimport/bimport\",\n  \"from\": \"bimport\",\n  \"name\": \"bimport\"\n}, {\n  \"im\": \"./bimport/brequire\",\n  \"from\": \"brequire\",\n  \"name\": \"brequire\"\n}, {\n  \"im\": \"./bundle\",\n  \"from\": \"IBundleSpecs\",\n  \"name\": \"IBundleSpecs\"\n}, {\n  \"im\": \"./bundle\",\n  \"from\": \"Bundle\",\n  \"name\": \"Bundle\"\n}, {\n  \"im\": \"./events/index\",\n  \"from\": \"Events\",\n  \"name\": \"Events\"\n}, {\n  \"im\": \"./events/types\",\n  \"from\": \"ListenerFunction\",\n  \"name\": \"ListenerFunction\"\n}, {\n  \"im\": \"./instances\",\n  \"from\": \"instances\",\n  \"name\": \"instances\"\n}, {\n  \"im\": \"./module/index\",\n  \"from\": \"Module\",\n  \"name\": \"Module\"\n}, {\n  \"im\": \"./package/exports\",\n  \"from\": \"IExportsDescriptor\",\n  \"name\": \"IExportsDescriptor\"\n}, {\n  \"im\": \"./package/ims/im\",\n  \"from\": \"IMSpecs\",\n  \"name\": \"IMSpecs\"\n}, {\n  \"im\": \"./package/ims/index\",\n  \"from\": \"IMCreators\",\n  \"name\": \"IMCreators\"\n}, {\n  \"im\": \"./package/index\",\n  \"from\": \"Package\",\n  \"name\": \"Package\"\n}];\nvar bimport, brequire, IBundleSpecs, Bundle, Events, ListenerFunction, instances, Module, IExportsDescriptor, IMSpecs, IMCreators, Package;\n__pkg.exports.process = function (require2) {\n  bimport = require2(\"./bimport/bimport\").bimport;\n  brequire = require2(\"./bimport/brequire\").brequire;\n  IBundleSpecs = require2(\"./bundle\").IBundleSpecs;\n  Bundle = require2(\"./bundle\").Bundle;\n  Events = require2(\"./events/index\").Events;\n  ListenerFunction = require2(\"./events/types\").ListenerFunction;\n  instances = require2(\"./instances\").instances;\n  Module = require2(\"./module/index\").Module;\n  IExportsDescriptor = require2(\"./package/exports\").IExportsDescriptor;\n  IMSpecs = require2(\"./package/ims/im\").IMSpecs;\n  IMCreators = require2(\"./package/ims/index\").IMCreators;\n  Package = require2(\"./package/index\").Package;\n};\nvar __bp = {};\nims.get(\"./base/index\").creator(() => 0, __bp);\n__pkg = new __bp.BeyondPackage(__pkg.exports);\n__pkg.initialise(ims);\n};\n\ncode(module, require);\n_exports(module.exports);\n}}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","dependencies":[],"warnings":[]}