System.register(["@beyond-js/kernel/bundle"], function (_export, _context) {
  "use strict";

  var dependency_0, __Bundle, __pkg, ims, __beyond_pkg, hmr;
  return {
    setters: [function (_beyondJsKernelBundle) {
      dependency_0 = _beyondJsKernelBundle;
    }],
    execute: function () {
      ({
        Bundle: __Bundle
      } = dependency_0);
      __pkg = new __Bundle({
        "module": {
          "vspecifier": "@beyond-js/widgets@0.1.3/application"
        },
        "type": "ts"
      }, _context.meta.url).package();
      ;
      __pkg.dependencies.update([]);
      ims = new Map();
      /*************************
      INTERNAL MODULE: ./startup
      *************************/
      ims.set('./startup', {
        hash: 3577862121,
        creator: function (require, exports) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          function createLayout(config) {
            const {
              layout
            } = config;
            const element = document.createElement(layout ? layout : 'beyond-layout-children');
            document.body.append(element);
          }
          function startup() {
            const promises = [];
            const {
              specifier
            } = globalThis.__app_package;
            promises.push(bimport(`${specifier}/config`));
            promises.push(bimport(`${specifier}/start`));
            promises.push(bimport('@beyond-js/kernel/core'));
            promises.push(bimport('@beyond-js/kernel/routing'));
            promises.push(bimport('@beyond-js/widgets/routing'));
            promises.push(bimport('@beyond-js/widgets/layout'));
            Promise.all(promises).then(([{
              default: config
            }]) => createLayout(config)).catch(exc => console.log(exc.stack));
          }
          (() => {
            if (!globalThis.__ssr_fetch) {
              startup();
              return;
            }
            /**
             * window.__ssr_fetch is injected in the index.html when routing.ssr is on
             */
            window.__ssr_fetch.then(ssr => {
              if (!ssr.json || ssr.json.errors?.length) {
                console.error('Error getting ssr data:', ssr.json.errors);
                startup();
                return;
              }
              const promises = [];
              const {
                specifier
              } = globalThis.__app_package;
              promises.push(bimport(`${specifier}/config`));
              promises.push(bimport(`${specifier}/start`));
              promises.push(bimport('@beyond-js/widgets/render'));
              promises.push(bimport('@beyond-js/widgets/layout'));
              Promise.all(promises).then(([{
                default: config
              },, render, layout]) => {
                // Register the widgets
                const specs = new Map(ssr.json.widgets.specs);
                render.widgets.register([...specs.values()]);
                // Register the ssr widgets
                const instances = ssr.json.widgets.instances;
                const prerender = render.prerender;
                instances.forEach(instance => prerender.ssr.push(instance));
                // Register the ssr page and layout structure
                const lssr = layout.ssr;
                lssr.data(ssr.json.main, ssr.json.page);
                createLayout(config);
              }).catch(exc => console.log(exc.stack));
            });
          })();
        }
      });

      // Module exports
      __pkg.exports.process = function ({
        require,
        prop,
        value
      }) {};
      _export("__beyond_pkg", __beyond_pkg = __pkg);
      _export("hmr", hmr = new function () {
        this.on = (event, listener) => void 0;
        this.off = (event, listener) => void 0;
      }());
      __pkg.initialise(ims);
    }
  };
});
//# sourceMappingURL=application.sjs.js.map