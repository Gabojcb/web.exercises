/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/kernel/core';
import * as __beyond_dep_ns_1 from '@beyond-js/kernel/bundle';
// dependencies-styles.ts
declare namespace ns_0 {
  import Events = __beyond_dep_ns_0.Events;
  import V1Styles = ns_3.V1Styles;
  export class DependenciesStyles extends Events {
    #private;
    get elements(): Set<V1Styles>;
    constructor(vspecifier: string);
  }
}


// legacy.ts
declare namespace ns_1 {
  export class _default {
    #private;
    get engine(): string;
    get value(): string;
    get appended(): boolean;
    constructor(bundle: string, value: string);
    /**
     * @deprecated Only required by legacy applications
     */
    appendToDOM(is: string): void;
  }
}


// registry.ts
declare namespace ns_2 {
  import LegacyStyles = ns_1._default;
  import V1Styles = ns_3.V1Styles;
  class Registry {
    #private;
    register(vspecifier: string, value: string): LegacyStyles | V1Styles;
    has(vspecifier: string): boolean;
    get(vspecifier: string): LegacyStyles | V1Styles;
  }
  export const styles: Registry;
  export {};
}


// v1.ts
declare namespace ns_3 {
  import Events = __beyond_dep_ns_0.Events;
  import Bundle = __beyond_dep_ns_1.Bundle;
  export class V1Styles extends Events {
    #private;
    get engine(): string;
    get bundle(): Bundle;
    get version(): number;
    get resource(): string;
    /**
     * The url of the stylesheet including the HMR version qs parameter
     *
     * @return {string}
     */
    get href(): string;
    constructor(resource: string);
    /**
     * Called by HMR in development environment
     */
    change(): void;
  }
}


export import DependenciesStyles = ns_0.DependenciesStyles;
export import styles = ns_2.styles;
export import V1Styles = ns_3.V1Styles;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };